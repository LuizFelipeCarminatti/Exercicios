dependencies:{
    backend: {
        CONNECT-FLASH -> O flash é uma área especial da sessão usada para armazenar mensagens. As mensagens são escritas no flash e apagadas após serem exibidas ao usuário. O flash é normalmente usado em combinação com redirecionamentos, garantindo que a mensagem esteja disponível para a próxima página a ser renderizada.

        CONNECT-MONGO -> Armazenamento de sessão MongoDB para Connect e Express escrito em Typescript.

        CORE-JS -> Ele adiciona funcionalidades mais recentes do ECMAScript a navegadores mais antigos.

        CROSS-ENV -> É uma ferramenta de linha de comando que permite definir variáveis de ambiente para comandos que você executa no terminal, independentemente do sistema operacional. Em outras palavras, ele garante que as variáveis de ambiente sejam definidas de forma consistente em diferentes sistemas operacionais (Windows, macOS, Linux), facilitando a execução de scripts e comandos em diversos ambientes.

        CSURF -> É a sigla para Cross-Site Request Forgery, ou em português, Falsificação de Requisição entre Sites. É um tipo de ataque cibernético que explora a confiança que um site tem no navegador do usuário.

        DOTENV -> O dotenv é uma ferramenta muito útil no desenvolvimento de aplicações, especialmente em ambientes Node.js, que serve para gerenciar variáveis de ambiente de forma mais organizada e segura.

        EJS -> É um motor de templates simples e poderoso que permite você criar páginas HTML dinâmicas inserindo código JavaScript diretamente nos seus templates.

        EXPRESS -> O Express.js é um framework minimalista e flexível para Node.js que facilita a criação de aplicações web e APIs.

        EXPRESS-SESSION -> O express-session é um middleware para o Express.js que permite gerenciar sessões de usuários em suas aplicações web. Uma sessão é um mecanismo que permite você acompanhar o estado de um usuário ao longo de múltiplas requisições HTTP, como se ele estivesse "logado" em sua aplicação.

        HELMET -> O Helmet é um middleware para o Express.js que se dedica à segurança do cabeçalho HTTP. Em outras palavras, ele adiciona ou remove cabeçalhos HTTP de forma programada para proteger sua aplicação web contra uma variedade de ataques comuns.

        MONGOOSE -> O Mongoose é uma biblioteca ODM (Object Data Modeling) para MongoDB e Node.js. Em termos simples, ele serve como uma ponte entre seu código JavaScript e o banco de dados MongoDB, facilitando a interação com os dados.

        REGENETATOR-RUNTIME -> O regenerator-runtime é uma biblioteca JavaScript que permite que você utilize a sintaxe de async/await em ambientes que não a suportam nativamente.

        CORS -> CORS (Cross-Origin Resource Sharing) é um mecanismo de segurança implementado nos navegadores que permite que um aplicativo web faça requisições a um servidor em um domínio diferente daquele onde o aplicativo está hospedado.
    }

    frontend: {
        AXIOS -> O Axios é uma biblioteca JavaScript popular e fácil de usar, projetada para fazer requisições HTTP, tanto em navegadores quanto em ambientes Node.js. Ele serve como um cliente HTTP, facilitando a comunicação com APIs e serviços web.
    }

    webpack : {
        CSS-LOADER -> O CSS-loader é um loader essencial para o Webpack que permite que você importe arquivos CSS diretamente nos seus módulos JavaScript. Ele funciona como uma ponte entre o mundo do JavaScript e o mundo do CSS, permitindo que você utilize CSS dentro da sua estrutura de módulos.

        STYLE-LOADER -> O style-loader é um loader essencial no desenvolvimento de aplicações web com ferramentas como Webpack. Sua principal função é injetar estilos CSS diretamente no <head> do seu HTML durante a compilação do seu projeto.
    }
}

devDependencies: {
    webpack : {
        @BABEL/CLI -> é a interface de linha de comando (CLI) do Babel, uma ferramenta fundamental para o desenvolvimento de JavaScript moderno. Ele permite que você transpile (converter) seu código JavaScript escrito em versões mais recentes do ECMAScript para versões mais antigas, garantindo assim que seu código funcione em uma ampla variedade de navegadores e ambientes.

        @BABEL/CORE -> é o coração do Babel, uma ferramenta fundamental para o desenvolvimento de JavaScript moderno. Ele atua como o motor principal que realiza a transpilação do seu código JavaScript.

        @BABEL/PRESET-ENV -> É um preset inteligente para o Babel que permite você utilizar as últimas funcionalidades do JavaScript sem precisar se preocupar em microgerenciar quais transformações sintáticas (e opcionalmente, quais polyfills de navegador) são necessárias para o seu ambiente alvo. Isso torna sua vida mais fácil e seus bundles de JavaScript menores!

        BABEL-LOADER -> é um loader essencial para o Webpack que permite você utilizar o Babel durante o processo de build da sua aplicação. Em outras palavras, ele integra o Babel ao Webpack, permitindo que você utilize as últimas funcionalidades do JavaScript (ES6+, ES7+) em seus projetos, mesmo que os navegadores dos seus usuários não as suportem nativamente.

        WEBPACK -> é um poderoso empacotador de módulos (module bundler) para aplicações JavaScript modernas. Ele atua como um construtor, analisando seu projeto e gerando um ou mais arquivos (bundles) que contêm todo o código necessário para sua aplicação funcionar.

        WEBPACK-CLI -> é a interface de linha de comando (CLI) do Webpack. Ele fornece uma forma simples e direta de interagir com o Webpack, permitindo que você execute comandos para construir seus projetos e gerenciar suas configurações.
    }
} 

O que é transpilação?

Transpilação é o processo de converter código escrito em uma versão mais recente do JavaScript para uma versão mais antiga, garantindo que seu código seja compatível com uma ampla gama de navegadores.